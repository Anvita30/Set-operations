/*Name-Anvita Bamboriya
  Roll no-SYITA107
  Problem Statement:-
  Represent sets using one-dimensional arrays and implement functions to perform
  i. Union
  ii. Intersection
  iii. Difference
  iv. Symmetric difference of two sets*/

#include <stdio.h>

int main() 
{
  int a[20],b[20],c[20],d[20];
  int i,j,p,q,x,y,k,flag,ch;
  printf("\nEnter number of elements in a set A:");
   scanf("%d",&x);
   printf("Enter elements in set A:");
   for(i=0;i<x;i++)
   {
     scanf("%d",&a[i]);
   }
   printf("\nEnter number of elements in a set B:");
   scanf("%d",&y);
   printf("Enter elements in set B:");
   for(i=0;i<y;i++)
   {
     scanf("%d",&b[i]);
   }
  printf("Set A:{ ");
  for (i=0;i<x;i++)
  {
    printf("%d ",a[i]);
    
  }
  printf("}");
  printf("\nSet B:{ ");
  for(i=0;i<y;i++)
  {
    printf("%d ",b[i]);
  }
   printf("}");

do{
printf("\n-------Enter choice-------\n1)Union.\n2)Intersection.\n3)Difference.\n4)Symmetric Difference\n--------------------------\n");
scanf("%d",&ch);

switch(ch)
{
case 1: //for union
k=0;
for(i=0;i<x;i++)
{
c[k]=a[i];
k++;
}
for(i=0;i<y;i++)
{
flag=1;
for(j=0;j<x;j++)
{
if(b[i]==a[j])
{
flag=0;
break;
}
}
if(flag==1)
{
c[k]=b[i];
k++;
}
}
p=k;
printf("\nUnion:{");
for(k=0;k <p;k++)
{
printf(" %d",c[k]);
}
printf(" }");
break;

case 2: //for intersection

k=0;
for(i=0;i<y;i++)
{
flag=1;
for(j=0;j<x;j++)
{
if(b[i]==a[j])
{
flag=0;
break;
}
}
if(flag==0)
{
c[k]=b[i];
k++;
}
}
p=k;
printf("\nIntersection:{ ");
for(k=0;k<p;k++)
{
printf("%d ",c[k]);
}
printf("}");
break;

case 3: //for difference

printf("\nDifference\nA-B:{ ");
 for(i=0;i<x;i++)
 {
 flag=0;
 for(j=0;j<y;j++)
 {
 if(a[i]==b[j])
 {
 flag=1;
 break;
 }
 }
 if(flag==0)
 printf("%d ",a[i]);
 }
 printf("}");

 printf("\nB-A:{ ");
 for(i=0;i<y;i++)
 {
 flag=0;
 for(j=0;j<x;j++)
 {
 if(b[i]==a[j])
 {
 flag=1;
 break;
 }
 }
 if(flag==0)
 printf("%d ",b[i]);
 }
 printf("}");
break;

case 4: //for symm difference
k=0;
 for(i=0;i<x;i++)
 {
 flag=0;
 for(j=0;j<y;j++)
 {
 if(a[i]==b[j])
 {
 flag=1;
 break;
 }
 }
 if(flag==0)
 {
 d[k]=a[i];
 k++;
 }
 }
 for(i=0;i<y;i++)
 {
 flag=0;
 for(j=0;j<x;j++)
 {
 if(b[i]==a[j])
 {
 flag=1;
 break;
 }
 }
 if(flag==0)
 {
 d[k]=b[i];
 k++;
 }
 }
 
 printf("\n(A-B)U(B-A):{");
 for(i=0;i<k;i++)
 {
 printf(" %d ",d[i]);
 }
 printf("}");
 break;
}
printf("\n\nDo you want to continue(0/1)? ");

scanf("%d",&q);
}
while(q==1);
if (q==0)
{
printf("\nThank-You!!");
}
}